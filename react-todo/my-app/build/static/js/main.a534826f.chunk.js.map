{"version":3,"sources":["todos/todos.js","todos/child.js","index.js"],"names":["todos","Component","props","testClick","console","log","demo","refs","gh","state","todoList","ischecked","value","filterBtn","handleEnter","bind","allSelect","handleChange","handleDel","allClick","actClick","comClick","clearClick","handleEdit","this","setState","e","newList","keyCode","push","target","List","map","item","index","splice","className","onKeyDown","type","placeholder","onClick","i","dom","key","checked","id","for","onChange","num","ref","React","ReactDom","render","document","getElementById"],"mappings":"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","file":"static/js/main.a534826f.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Icon } from 'antd';\r\n// import 'antd/dist/antd.css';\r\nimport './todos.css';\r\nimport Child from './child';\r\nexport default class todos extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            todoList: [{ischecked:false, value: 'asdfaf'}],\r\n            filterBtn: 'all'\r\n        }\r\n        this.handleEnter = this.handleEnter.bind(this);\r\n        this.allSelect = this.allSelect.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleDel = this.handleDel.bind(this);\r\n        this.allClick = this.allClick.bind(this);\r\n        this.actClick = this.actClick.bind(this);\r\n        this.comClick = this.comClick.bind(this);\r\n        this.clearClick = this.clearClick.bind(this);\r\n        this.handleEdit = this.handleEdit.bind(this);\r\n    }\r\n    //过滤\r\n    allClick(){\r\n        this.setState({\r\n            filterBtn: 'all'\r\n        })\r\n    }\r\n    actClick(){\r\n        this.setState({\r\n            filterBtn: 'active'\r\n        })\r\n    }\r\n    comClick(){\r\n        this.setState({\r\n            filterBtn: 'completed'\r\n        })\r\n    }\r\n    //回车，增加列表数据\r\n    handleEnter(e){\r\n        const newList = [...this.state.todoList];\r\n        if(e.keyCode === 13){\r\n            newList.push({value: e.target.value, ischecked: false});\r\n            e.target.value = '';\r\n        }\r\n        this.setState({\r\n            todoList:newList,\r\n            filterBtn: 'all'\r\n        })\r\n    }\r\n    //全选\r\n    allSelect(){\r\n        const newList = [...this.state.todoList];\r\n        const List = newList.map((item)=>{\r\n            if(item.ischecked === false){\r\n                item.ischecked = true;\r\n                return item\r\n            }else{\r\n                return item\r\n            }\r\n        });\r\n        this.setState({\r\n            todoList: List\r\n        })\r\n    }\r\n    //改变所选框状态\r\n    handleChange(index){\r\n        const newList = [...this.state.todoList];\r\n        if(newList[index].ischecked === true){\r\n            newList[index].ischecked = false;\r\n        }else{\r\n            newList[index].ischecked = true;\r\n        }\r\n        this.setState({\r\n            todoList:newList        \r\n        })\r\n\r\n    }\r\n    //修改数据\r\n    handleEdit(e,index){\r\n        const newList =[...this.state.todoList];\r\n        newList[index].value = e.target.value;\r\n        this.setState({\r\n            todoList: newList\r\n        })\r\n    }\r\n    //删除当前列表数据\r\n    handleDel(index){\r\n        const newList = [...this.state.todoList];\r\n        newList.splice(index,1);\r\n        this.setState({\r\n            todoList: newList\r\n        })\r\n    }\r\n    clearClick(){\r\n        const List = [...this.state.todoList];\r\n        const newList = [];\r\n        List.map((item)=>{\r\n            if(item.ischecked === false){\r\n                newList.push(item)\r\n            }\r\n        })\r\n        this.setState({\r\n            todoList: newList\r\n        })\r\n        \r\n    }\r\n    testClick = ()=>{\r\n        console.log('父组件的文本');\r\n        let demo = this.refs.gh;\r\n        console.log(demo);\r\n    }\r\n    render(){\r\n        return(\r\n            \r\n            <div className='wrapper'>\r\n                <div className='header'>\r\n                <h1>todos</h1>\r\n                <input onKeyDown={this.handleEnter} type='text' placeholder='What need to be done?'/>\r\n                </div>\r\n                <div className='main'>\r\n                <label onClick ={this.allSelect}><Icon className='downImg' type=\"down\" /></label>\r\n                <ul>\r\n                    {\r\n                    this.state.todoList.map((item,i) =>{\r\n                        let dom =(\r\n                        <li key ={i}>\r\n                        <div className='view'>\r\n                        <input type='checkbox' checked ={item.ischecked}  onClick={()=>this.handleChange(i)} id='checkStyle'/>\r\n                        <label  for=\"checkStyle\"></label >\r\n                        <input type = 'text'  value = {item.value} className = {item.ischecked === false?'toggle':'_toggle'} onChange = {(e)=>{this.handleEdit(e,i)}}></input>\r\n                        {/* <label className='toggle'>{item.value}</label> */}\r\n                        <button className='del' onClick = {()=>this.handleDel(i)}></button>\r\n                        </div>\r\n                        </li>);\r\n                    if(this.state.filterBtn === 'all'){\r\n                        return dom;\r\n                    }else if(this.state.filterBtn === 'active'){\r\n                        if(item.ischecked === false){\r\n                            return dom;\r\n                        }\r\n                    }else if(this.state.filterBtn === 'completed'){\r\n                        if(item.ischecked === true){\r\n                            return dom;\r\n                        }\r\n                    }\r\n                })\r\n                    }\r\n                </ul>\r\n                </div>\r\n                <div className='footer'>\r\n                <span>{(()=>{\r\n                    let num = 0;\r\n                    this.state.todoList.map((item)=>{\r\n                        if(item.ischecked === false){\r\n                            num++;\r\n                        }\r\n                    })\r\n                    return num;\r\n                })()}</span>\r\n                <span>item left</span>\r\n                <div className='filter'>\r\n                    <div className={this.state.filterBtn === 'all'?'all active': 'all'} onClick = {this.allClick}>all</div>\r\n                    <div className={this.state.filterBtn === 'active'?'act active': 'act'} onClick = {this.actClick}>active</div>\r\n                    <div className={this.state.filterBtn === 'completed'?'com active': 'com'} onClick = {this.comClick}>completed</div>\r\n                </div>\r\n                <button ref=\"btn3\" className='clear' onClick={this.clearClick}>Clear completed</button>\r\n                {/* <Child ref=\"gh\"></Child> */}\r\n                {/* <button onClick = {this.testClick}>点击</button> */}\r\n                </div>\r\n                \r\n            </div>\r\n            \r\n        )\r\n    }\r\n\r\n}","import React,{Component} from 'react';\r\nexport default class child extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            name: 123\r\n        }\r\n    }\r\n    childClick = ()=>{\r\n        console.log('子组件的文本')\r\n    }\r\n    render(){\r\n        return (\r\n            <div>\r\n                这是child{this.state.name}\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport ReactDom from 'react-dom';\r\nimport Todos from './todos/todos';\r\nimport './index.css';\r\n\r\nReactDom.render(<Todos/>,document.getElementById('root'));\r\n"],"sourceRoot":""}